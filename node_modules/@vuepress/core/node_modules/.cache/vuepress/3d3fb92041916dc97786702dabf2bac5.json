{"remainingRequest":"/Users/yixu/CODE/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yixu/CODE/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yixu/CODE/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/yixu/CODE/blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/yixu/CODE/blog/docs/language/README.md?vue&type=template&id=6a9a7104&","dependencies":[{"path":"/Users/yixu/CODE/blog/docs/language/README.md","mtime":1561129340907},{"path":"/Users/yixu/CODE/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yixu/CODE/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yixu/CODE/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yixu/CODE/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yixu/CODE/blog/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}